<?php
namespace ToolsBundle\Services;


use AuthenticationBundle\Entity\User;
use Doctrine\ORM\EntityManager;
use PaymentBundle\Services\PaymentService;
use PublicationBundle\Entity\Publication;
use SubscriptionBundle\Entity\Subscription;

class GenerateService
{
    const ARRAYFIRSTNAME = array(
        'Allison',
        'Arthur',
        'Ana',
        'Alex',
        'Arlene',
        'Alberto',
        'Barry',
        'Bertha',
        'Bill',
        'Bonnie',
        'Bret',
        'Beryl',
        'Chantal',
        'Cristobal',
        'Claudette',
        'Charley',
        'Cindy',
        'Chris',
        'Dean',
        'Dolly',
        'Danny',
        'Danielle',
        'Dennis',
        'Debby',
        'Erin',
        'Edouard',
        'Erika',
        'Earl',
        'Emily',
        'Ernesto',
        'Felix',
        'Fay',
        'Fabian',
        'Frances',
        'Franklin',
        'Florence',
        'Gabielle',
        'Gustav',
        'Grace',
        'Gaston',
        'Gert',
        'Gordon',
        'Humberto',
        'Hanna',
        'Henri',
        'Hermine',
        'Harvey',
        'Helene',
        'Iris',
        'Isidore',
        'Isabel',
        'Ivan',
        'Irene',
        'Isaac',
        'Jerry',
        'Josephine',
        'Juan',
        'Jeanne',
        'Jose',
        'Joyce',
        'Karen',
        'Kyle',
        'Kate',
        'Karl',
        'Katrina',
        'Kirk',
        'Lorenzo',
        'Lili',
        'Larry',
        'Lisa',
        'Lee',
        'Leslie',
        'Michelle',
        'Marco',
        'Mindy',
        'Maria',
        'Michael',
        'Noel',
        'Nana',
        'Nicholas',
        'Nicole',
        'Nate',
        'Nadine',
        'Olga',
        'Omar',
        'Odette',
        'Otto',
        'Ophelia',
        'Oscar',
        'Pablo',
        'Paloma',
        'Peter',
        'Paula',
        'Philippe',
        'Patty',
        'Rebekah',
        'Rene',
        'Rose',
        'Richard',
        'Rita',
        'Rafael',
        'Sebastien',
        'Sally',
        'Sam',
        'Shary',
        'Stan',
        'Sandy',
        'Tanya',
        'Teddy',
        'Teresa',
        'Tomas',
        'Tammy',
        'Tony',
        'Van',
        'Vicky',
        'Victor',
        'Virginie',
        'Vince',
        'Valerie',
        'Wendy',
        'Wilfred',
        'Wanda',
        'Walter',
        'Wilma',
        'William',
        'Kumiko',
        'Aki',
        'Miharu',
        'Chiaki',
        'Michiyo',
        'Itoe',
        'Nanaho',
        'Reina',
        'Emi',
        'Yumi',
        'Ayumi',
        'Kaori',
        'Sayuri',
        'Rie',
        'Miyuki',
        'Hitomi',
        'Naoko',
        'Miwa',
        'Etsuko',
        'Akane',
        'Kazuko',
        'Miyako',
        'Youko',
        'Sachiko',
        'Mieko',
        'Toshie',
        'Junko');
    const ARRAYLASTNAME = array(
        'Abbott',
        'Acevedo',
        'Acosta',
        'Adams',
        'Adkins',
        'Aguilar',
        'Aguirre',
        'Albert',
        'Alexander',
        'Alford',
        'Allen',
        'Allison',
        'Alston',
        'Alvarado',
        'Alvarez',
        'Anderson',
        'Andrews',
        'Anthony',
        'Armstrong',
        'Arnold',
        'Ashley',
        'Atkins',
        'Atkinson',
        'Austin',
        'Avery',
        'Avila',
        'Ayala',
        'Ayers',
        'Bailey',
        'Baird',
        'Baker',
        'Baldwin',
        'Ball',
        'Ballard',
        'Banks',
        'Barber',
        'Barker',
        'Barlow',
        'Barnes',
        'Barnett',
        'Barr',
        'Barrera',
        'Barrett',
        'Barron',
        'Barry',
        'Bartlett',
        'Barton',
        'Bass',
        'Bates',
        'Battle',
        'Bauer',
        'Baxter',
        'Beach',
        'Bean',
        'Beard',
        'Beasley',
        'Beck',
        'Becker',
        'Bell',
        'Bender',
        'Benjamin',
        'Bennett',
        'Benson',
        'Bentley',
        'Benton',
        'Berg',
        'Berger',
        'Bernard',
        'Berry',
        'Best',
        'Bird',
        'Bishop',
        'Black',
        'Blackburn',
        'Blackwell',
        'Blair',
        'Blake',
        'Blanchard',
        'Blankenship',
        'Blevins',
        'Bolton',
        'Bond',
        'Bonner',
        'Booker',
        'Boone',
        'Booth',
        'Bowen',
        'Bowers',
        'Bowman',
        'Boyd',
        'Boyer',
        'Boyle',
        'Bradford',
        'Bradley',
        'Bradshaw',
        'Brady',
        'Branch',
        'Bray',
        'Brennan',
        'Brewer',
        'Bridges',
        'Briggs',
        'Bright',
        'Britt',
        'Brock',
        'Brooks',
        'Brown',
        'Browning',
        'Bruce',
        'Bryan',
        'Bryant',
        'Buchanan',
        'Buck',
        'Buckley',
        'Buckner',
        'Bullock',
        'Burch',
        'Burgess',
        'Burke',
        'Burks',
        'Burnett',
        'Burns',
        'Burris',
        'Burt',
        'Burton',
        'Bush',
        'Butler',
        'Byers',
        'Byrd',
        'Cabrera',
        'Cain',
        'Calderon',
        'Caldwell',
        'Calhoun',
        'Callahan',
        'Camacho',
        'Cameron',
        'Campbell',
        'Campos',
        'Cannon',
        'Cantrell',
        'Cantu',
        'Cardenas',
        'Carey',
        'Carlson',
        'Carney',
        'Carpenter',
        'Carr',
        'Carrillo',
        'Carroll',
        'Carson',
        'Carter',
        'Carver',
        'Case',
        'Casey',
        'Cash',
        'Castaneda',
        'Castillo',
        'Castro',
        'Cervantes',
        'Chambers',
        'Chan',
        'Chandler',
        'Chaney',
        'Chang',
        'Chapman',
        'Charles',
        'Chase',
        'Chavez',
        'Chen',
        'Cherry',
        'Christensen',
        'Christian',
        'Church',
        'Clark',
        'Clarke',
        'Clay',
        'Clayton',
        'Clements',
        'Clemons',
        'Cleveland',
        'Cline',
        'Cobb',
        'Cochran',
        'Coffey',
        'Cohen',
        'Cole',
        'Coleman',
        'Collier',
        'Collins',
        'Colon',
        'Combs',
        'Compton',
        'Conley',
        'Conner',
        'Conrad',
        'Contreras',
        'Conway',
        'Cook',
        'Cooke',
        'Cooley',
        'Cooper',
        'Copeland',
        'Cortez',
        'Cote',
        'Cotton',
        'Cox',
        'Craft',
        'Craig',
        'Crane',
        'Crawford',
        'Crosby',
        'Cross',
        'Cruz',
        'Cummings',
        'Cunningham',
        'Curry',
        'Curtis',
        'Dale',
        'Dalton',
        'Daniel',
        'Daniels',
        'Daugherty',
        'Davenport',
        'David',
        'Davidson',
        'Davis',
        'Dawson',
        'Day',
        'Dean',
        'Decker',
        'Dejesus',
        'Delacruz',
        'Delaney',
        'Deleon',
        'Delgado',
        'Dennis',
        'Diaz',
        'Dickerson',
        'Dickson',
        'Dillard',
        'Dillon',
        'Dixon',
        'Dodson',
        'Dominguez',
        'Donaldson',
        'Donovan',
        'Dorsey',
        'Dotson',
        'Douglas',
        'Downs',
        'Doyle',
        'Drake',
        'Dudley',
        'Duffy',
        'Duke',
        'Duncan',
        'Dunlap',
        'Dunn',
        'Duran',
        'Durham',
        'Dyer',
        'Eaton',
        'Edwards',
        'Elliott',
        'Ellis',
        'Ellison',
        'Emerson',
        'England',
        'English',
        'Erickson',
        'Espinoza',
        'Estes',
        'Estrada',
        'Evans',
        'Everett',
        'Ewing',
        'Farley',
        'Farmer',
        'Farrell',
        'Faulkner',
        'Ferguson',
        'Fernandez',
        'Ferrell',
        'Fields',
        'Figueroa',
        'Finch',
        'Finley',
        'Fischer',
        'Fisher',
        'Fitzgerald',
        'Fitzpatrick',
        'Fleming',
        'Fletcher',
        'Flores',
        'Flowers',
        'Floyd',
        'Flynn',
        'Foley',
        'Forbes',
        'Ford',
        'Foreman',
        'Foster',
        'Fowler',
        'Fox',
        'Francis',
        'Franco',
        'Frank',
        'Franklin',
        'Franks',
        'Frazier',
        'Frederick',
        'Freeman',
        'French',
        'Frost',
        'Fry',
        'Frye',
        'Fuentes',
        'Fuller',
        'Fulton',
        'Gaines',
        'Gallagher',
        'Gallegos',
        'Galloway',
        'Gamble',
        'Garcia',
        'Gardner',
        'Garner',
        'Garrett',
        'Garrison',
        'Garza',
        'Gates',
        'Gay',
        'Gentry',
        'George',
        'Gibbs',
        'Gibson',
        'Gilbert',
        'Giles',
        'Gill',
        'Gillespie',
        'Gilliam',
        'Gilmore',
        'Glass',
        'Glenn',
        'Glover',
        'Goff',
        'Golden',
        'Gomez',
        'Gonzales',
        'Gonzalez',
        'Good',
        'Goodman',
        'Goodwin',
        'Gordon',
        'Gould',
        'Graham',
        'Grant',
        'Graves',
        'Gray',
        'Green',
        'Greene',
        'Greer',
        'Gregory',
        'Griffin',
        'Griffith',
        'Grimes',
        'Gross',
        'Guerra',
        'Guerrero',
        'Guthrie',
        'Gutierrez',
        'Guy',
        'Guzman',
        'Hahn',
        'Hale',
        'Haley',
        'Hall',
        'Hamilton',
        'Hammond',
        'Hampton',
        'Hancock',
        'Haney',
        'Hansen',
        'Hanson',
        'Hardin',
        'Harding',
        'Hardy',
        'Harmon',
        'Harper',
        'Harrell',
        'Harrington',
        'Harris',
        'Harrison',
        'Hart',
        'Hartman',
        'Harvey',
        'Hatfield',
        'Hawkins',
        'Hayden',
        'Hayes',
        'Haynes',
        'Hays',
        'Head',
        'Heath',
        'Hebert',
        'Henderson',
        'Hendricks',
        'Hendrix',
        'Henry',
        'Hensley',
        'Henson',
        'Herman',
        'Hernandez',
        'Herrera',
        'Herring',
        'Hess',
        'Hester',
        'Hewitt',
        'Hickman',
        'Hicks',
        'Higgins',
        'Hill',
        'Hines',
        'Hinton',
        'Hobbs',
        'Hodge',
        'Hodges',
        'Hoffman',
        'Hogan',
        'Holcomb',
        'Holden',
        'Holder',
        'Holland',
        'Holloway',
        'Holman',
        'Holmes',
        'Holt',
        'Hood',
        'Hooper',
        'Hoover',
        'Hopkins',
        'Hopper',
        'Horn',
        'Horne',
        'Horton',
        'House',
        'Houston',
        'Howard',
        'Howe',
        'Howell',
        'Hubbard',
        'Huber',
        'Hudson',
        'Huff',
        'Huffman',
        'Hughes',
        'Hull',
        'Humphrey',
        'Hunt',
        'Hunter',
        'Hurley',
        'Hurst',
        'Hutchinson',
        'Hyde',
        'Ingram',
        'Irwin',
        'Jackson',
        'Jacobs',
        'Jacobson',
        'James',
        'Jarvis',
        'Jefferson',
        'Jenkins',
        'Jennings',
        'Jensen',
        'Jimenez',
        'Johns',
        'Johnson',
        'Johnston',
        'Jones',
        'Jordan',
        'Joseph',
        'Joyce',
        'Joyner',
        'Juarez',
        'Justice',
        'Kane',
        'Kaufman',
        'Keith',
        'Keller',
        'Kelley',
        'Kelly',
        'Kemp',
        'Kennedy',
        'Kent',
        'Kerr',
        'Key',
        'Kidd',
        'Kim',
        'King',
        'Kinney',
        'Kirby',
        'Kirk',
        'Kirkland',
        'Klein',
        'Kline',
        'Knapp',
        'Knight',
        'Knowles',
        'Knox',
        'Koch',
        'Kramer',
        'Lamb',
        'Lambert',
        'Lancaster',
        'Landry',
        'Lane',
        'Lang',
        'Langley',
        'Lara',
        'Larsen',
        'Larson',
        'Lawrence',
        'Lawson',
        'Le',
        'Leach',
        'Leblanc',
        'Lee',
        'Leon',
        'Leonard',
        'Lester',
        'Levine',
        'Levy',
        'Lewis',
        'Lindsay',
        'Lindsey',
        'Little',
        'Livingston',
        'Lloyd',
        'Logan',
        'Long',
        'Lopez',
        'Lott',
        'Love',
        'Lowe',
        'Lowery',
        'Lucas',
        'Luna',
        'Lynch',
        'Lynn',
        'Lyons',
        'Macdonald',
        'Macias',
        'Mack',
        'Madden',
        'Maddox',
        'Maldonado',
        'Malone',
        'Mann',
        'Manning',
        'Marks',
        'Marquez',
        'Marsh',
        'Marshall',
        'Martin',
        'Martinez',
        'Mason',
        'Massey',
        'Mathews',
        'Mathis',
        'Matthews',
        'Maxwell',
        'May',
        'Mayer',
        'Maynard',
        'Mayo',
        'Mays',
        'Mcbride',
        'Mccall',
        'Mccarthy',
        'Mccarty',
        'Mcclain',
        'Mcclure',
        'Mcconnell',
        'Mccormick',
        'Mccoy',
        'Mccray',
        'Mccullough',
        'Mcdaniel',
        'Mcdonald',
        'Mcdowell',
        'Mcfadden',
        'Mcfarland',
        'Mcgee',
        'Mcgowan',
        'Mcguire',
        'Mcintosh',
        'Mcintyre',
        'Mckay',
        'Mckee',
        'Mckenzie',
        'Mckinney',
        'Mcknight',
        'Mclaughlin',
        'Mclean',
        'Mcleod',
        'Mcmahon',
        'Mcmillan',
        'Mcneil',
        'Mcpherson',
        'Meadows',
        'Medina',
        'Mejia',
        'Melendez',
        'Melton',
        'Mendez',
        'Mendoza',
        'Mercado',
        'Mercer',
        'Merrill',
        'Merritt',
        'Meyer',
        'Meyers',
        'Michael',
        'Middleton',
        'Miles',
        'Miller',
        'Mills',
        'Miranda',
        'Mitchell',
        'Molina',
        'Monroe',
        'Montgomery',
        'Montoya',
        'Moody',
        'Moon',
        'Mooney',
        'Moore',
        'Morales',
        'Moran',
        'Moreno',
        'Morgan',
        'Morin',
        'Morris',
        'Morrison',
        'Morrow',
        'Morse',
        'Morton',
        'Moses',
        'Mosley',
        'Moss',
        'Mueller',
        'Mullen',
        'Mullins',
        'Munoz',
        'Murphy',
        'Murray',
        'Myers',
        'Nash',
        'Navarro',
        'Neal',
        'Nelson',
        'Newman',
        'Newton',
        'Nguyen',
        'Nichols',
        'Nicholson',
        'Nielsen',
        'Nieves',
        'Nixon',
        'Noble',
        'Noel',
        'Nolan',
        'Norman',
        'Norris',
        'Norton',
        'Nunez',
        'Obrien',
        'Ochoa',
        'Oconnor',
        'Odom',
        'Odonnell',
        'Oliver',
        'Olsen',
        'Olson',
        'Oneal',
        'Oneil',
        'Oneill',
        'Orr',
        'Ortega',
        'Ortiz',
        'Osborn',
        'Osborne',
        'Owen',
        'Owens',
        'Pace',
        'Pacheco',
        'Padilla',
        'Page',
        'Palmer',
        'Park',
        'Parker',
        'Parks',
        'Parrish',
        'Parsons',
        'Pate',
        'Patel',
        'Patrick',
        'Patterson',
        'Patton',
        'Paul',
        'Payne',
        'Pearson',
        'Peck',
        'Pena',
        'Pennington',
        'Perez',
        'Perkins',
        'Perry',
        'Peters',
        'Petersen',
        'Peterson',
        'Petty',
        'Phelps',
        'Phillips',
        'Pickett',
        'Pierce',
        'Pittman',
        'Pitts',
        'Pollard',
        'Poole',
        'Pope',
        'Porter',
        'Potter',
        'Potts',
        'Powell',
        'Powers',
        'Pratt',
        'Preston',
        'Price',
        'Prince',
        'Pruitt',
        'Puckett',
        'Pugh',
        'Quinn',
        'Ramirez',
        'Ramos',
        'Ramsey',
        'Randall',
        'Randolph',
        'Rasmussen',
        'Ratliff',
        'Ray',
        'Raymond',
        'Reed',
        'Reese',
        'Reeves',
        'Reid',
        'Reilly',
        'Reyes',
        'Reynolds',
        'Rhodes',
        'Rice',
        'Rich',
        'Richard',
        'Richards',
        'Richardson',
        'Richmond',
        'Riddle',
        'Riggs',
        'Riley',
        'Rios',
        'Rivas',
        'Rivera',
        'Rivers',
        'Roach',
        'Robbins',
        'Roberson',
        'Roberts',
        'Robertson',
        'Robinson',
        'Robles',
        'Rocha',
        'Rodgers',
        'Rodriguez',
        'Rodriquez',
        'Rogers',
        'Rojas',
        'Rollins',
        'Roman',
        'Romero',
        'Rosa',
        'Rosales',
        'Rosario',
        'Rose',
        'Ross',
        'Roth',
        'Rowe',
        'Rowland',
        'Roy',
        'Ruiz',
        'Rush',
        'Russell',
        'Russo',
        'Rutledge',
        'Ryan',
        'Salas',
        'Salazar',
        'Salinas',
        'Sampson',
        'Sanchez',
        'Sanders',
        'Sandoval',
        'Sanford',
        'Santana',
        'Santiago',
        'Santos',
        'Sargent',
        'Saunders',
        'Savage',
        'Sawyer',
        'Schmidt',
        'Schneider',
        'Schroeder',
        'Schultz',
        'Schwartz',
        'Scott',
        'Sears',
        'Sellers',
        'Serrano',
        'Sexton',
        'Shaffer',
        'Shannon',
        'Sharp',
        'Sharpe',
        'Shaw',
        'Shelton',
        'Shepard',
        'Shepherd',
        'Sheppard',
        'Sherman',
        'Shields',
        'Short',
        'Silva',
        'Simmons',
        'Simon',
        'Simpson',
        'Sims',
        'Singleton',
        'Skinner',
        'Slater',
        'Sloan',
        'Small',
        'Smith',
        'Snider',
        'Snow',
        'Snyder',
        'Solis',
        'Solomon',
        'Sosa',
        'Soto',
        'Sparks',
        'Spears',
        'Spence',
        'Spencer',
        'Stafford',
        'Stanley',
        'Stanton',
        'Stark',
        'Steele',
        'Stein',
        'Stephens',
        'Stephenson',
        'Stevens',
        'Stevenson',
        'Stewart',
        'Stokes',
        'Stone',
        'Stout',
        'Strickland',
        'Strong',
        'Stuart',
        'Suarez',
        'Sullivan',
        'Summers',
        'Sutton',
        'Swanson',
        'Sweeney',
        'Sweet',
        'Sykes',
        'Talley',
        'Tanner',
        'Tate',
        'Taylor',
        'Terrell',
        'Terry',
        'Thomas',
        'Thompson',
        'Thornton',
        'Tillman',
        'Todd',
        'Torres',
        'Townsend',
        'Tran',
        'Travis',
        'Trevino',
        'Trujillo',
        'Tucker',
        'Turner',
        'Tyler',
        'Tyson',
        'Underwood',
        'Valdez',
        'Valencia',
        'Valentine',
        'Valenzuela',
        'Vance',
        'Vang',
        'Vargas',
        'Vasquez',
        'Vaughan',
        'Vaughn',
        'Vazquez',
        'Vega',
        'Velasquez',
        'Velazquez',
        'Velez',
        'Villarreal',
        'Vincent',
        'Vinson',
        'Wade',
        'Wagner',
        'Walker',
        'Wall',
        'Wallace',
        'Waller',
        'Walls',
        'Walsh',
        'Walter',
        'Walters',
        'Walton',
        'Ward',
        'Ware',
        'Warner',
        'Warren',
        'Washington',
        'Waters',
        'Watkins',
        'Watson',
        'Watts',
        'Weaver',
        'Webb',
        'Weber',
        'Webster',
        'Weeks',
        'Weiss',
        'Welch',
        'Wells',
        'West',
        'Wheeler',
        'Whitaker',
        'White',
        'Whitehead',
        'Whitfield',
        'Whitley',
        'Whitney',
        'Wiggins',
        'Wilcox',
        'Wilder',
        'Wiley',
        'Wilkerson',
        'Wilkins',
        'Wilkinson',
        'William',
        'Williams',
        'Williamson',
        'Willis',
        'Wilson',
        'Winters',
        'Wise',
        'Witt',
        'Wolf',
        'Wolfe',
        'Wong',
        'Wood',
        'Woodard',
        'Woods',
        'Woodward',
        'Wooten',
        'Workman',
        'Wright',
        'Wyatt',
        'Wynn',
        'Yang',
        'Yates',
        'York',
        'Young',
        'Zamora',
        'Zimmerman');
    const ARRAYDEPARTMENT = array(
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "10",
        "11",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "2A",
        "2B",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "30",
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
        "39",
        "40",
        "41",
        "43",
        "44",
        "45",
        "46",
        "47",
        "48",
        "49",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "57",
        "58",
        "59",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "69",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "76",
        "77",
        "78",
        "79",
        "80",
        "81",
        "82",
        "83",
        "84",
        "85",
        "86",
        "87",
        "88",
        "89",
        "90",
        "91",
        "92",
        "93",
        "94",
        "95",
        "97"
    );
    const ARRAYPUBLITITLE = array(
        "pc expert",
        "pirate",
        "01",
        "informatiques",
        "android magazine",
        "hacker",
        "programmez",
        "haking",
        "geek",
        "l'ordinateur",
        "create",
        "micro hebdo",
        "svm",
        "linux format",
        "windows pratique",
        "windows pc",
        "canard pc",
        "virus info",
        "jeux vidéo",
        "micro pratique",
        "gamer",
        "jeux vidéo junior",
        "hardware",
        "consoles +",
        "pc update",
        "hacktualité",
        "joystick",
        "01 business",
        "IT for business"
    );
    const DEFAULTIMAGE = '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';
    const LOREMIPSUM = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed imperdiet sed est ac consequat. Nunc semper velit quis lacus commodo, ultricies tincidunt nulla tincidunt. Suspendisse non justo vulputate, viverra arcu at, semper est. Aenean metus justo, laoreet eu commodo vel, viverra ac lorem. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla justo velit, bibendum quis leo eget, finibus molestie neque. Proin vestibulum facilisis tortor, nec ultricies orci venenatis vel. Mauris quis neque efficitur, luctus ex id, sodales magna. Curabitur turpis mauris, ornare vel tellus a, consectetur mollis tellus. Morbi cursus magna tellus, sed egestas erat facilisis non. Mauris cursus lorem at venenatis aliquam. Praesent viverra lacus ex, ac interdum nibh finibus at. In tempor urna ut erat finibus auctor. Cras volutpat augue quis felis suscipit, vitae convallis est placerat. Quisque in condimentum nisl, nec facilisis arcu.';

    private $stringService;
    private $paymentService;
    private $em;

    function __construct(EntityManager $em, StringService $stringService, PaymentService $paymentService)
    {
        $this->em = $em;
        $this->paymentService = $paymentService;
        $this->stringService = $stringService;
    }

    public function seedBase($userNumber, bool $createPublication = false){

        $users = $this->createRandomUsers($userNumber);

        if($createPublication){
            $this->generatePublication();
        }

        $publications = $this->em->getRepository('PublicationBundle:Publication')->findAll();

        $this->generateSubscritpion($users, $publications);

        return $users;
    }

    public function createRandomUsers($number = 1){

        $users = [];

        $mails = $this->em->getRepository('AuthenticationBundle:User')->getAllMail();

        for($i = 0; $i < $number; $i++){
            $user = new User();

            $firstname = $this::ARRAYFIRSTNAME[array_rand($this::ARRAYFIRSTNAME, 1)];
            $user->setFirstname($firstname);

            $lastname = $this::ARRAYLASTNAME[array_rand($this::ARRAYLASTNAME, 1)];
            $user->setLastname($lastname);

            $user->setCanonicalFullname($this->stringService->canonicolize($user->getFirstname().' '.$user->getLastname()));

            $user->setAdress('N/C');
            $user->setCity('N/C');

            $zip = $this::ARRAYDEPARTMENT[array_rand($this::ARRAYDEPARTMENT, 1)].'000';
            $user->setZipCode($zip);

            $user->setTel('0000000000');

            $split = explode(' ', $user->getCanonicalFullname());
            $prefix = $split[0].$split[1];
            $sufix = '@mail.fr';

            $check = false;

            while(!$check){
                $break = false;

                foreach($mails as $mail){
                    if($prefix.$sufix === array_values($mail)){
                        $break = true;
                        break;
                    }
                }

                if($break){
                    $prefix = $prefix.'x';
                }else{
                    $check = true;
                }

            }

            $user->setMail($prefix.$sufix);

            $user->setPassword(hash("sha512", '123'));
            $user->setBirthCity('N/C');
            $user->setBirthDate('01/01/'. rand(1949, 2017));
            $user->setLevel(2);
            $user->setActif(true);

            $users[] = $user;

            $this->em->persist($user);
        }

        $this->em->flush();

        return $users;
    }

    public function generatePublication(){
        $publications = [];

        foreach($this::ARRAYPUBLITITLE as $title){
            $publication = new Publication();
            $publication->setTitle($title);
            $publication->setCanonicalTitle($this->stringService->canonicolize($publication->getTitle()));
            $publication->setPicture($this::DEFAULTIMAGE);
            $publication->setAnnualCost(50);
            $publication->setCountByYear(12);
            $publication->setDescription($this::LOREMIPSUM);

            $publications[] = $publication;

            $this->em->persist($publication);
        }

        $this->em->flush();
    }

    public function generateSubscritpion($users, $publications){

        $subscriptions = [];

        /** @var $user User*/
        foreach ($users as $user){
            $rand = rand(1, count($publications));

            for($i = 0; $i < $rand; $i++){
                $subscription = new Subscription();
                $subscription->setUser($user);
                $subscription->setPublication($publications[$i]);

                $subscriptions[] = $subscription;

                $this->paymentService->createPayment($subscription->getDateStart(), $subscription->getDateEnd(), $subscription);

                $this->em->persist($subscription);
            }
        }

        $this->em->flush();
    }
}